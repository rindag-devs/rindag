package problem

// TestCase is a test case.
type TestCase struct {
	// Inf is the input of the test case.
	Inf Input `yaml:"inf" json:"inf"`

	// Ans is the answer of the test case.
	//
	// It is only available if the problem is an interactive problem or a submit-answer problem.
	//
	// Otherwise, it should be empty.
	// And the answer file will be generated by the main correct solution.
	Ans string `yaml:"ans,omitempty" json:"ans,omitempty"`

	// IsSample is true if the test case is a sample.
	IsSample bool `yaml:"is_sample" json:"is_sample"`

	// Disable is true if this test is not contained in the test case.
	//
	// For example, you can use a test case with "IsSample" and "NoTest" to describe the rules
	// for interactive problems.
	Disable bool `yaml:"disable" json:"disable"`
}

// Input defined from multiple source including fixed / generated.
type Input struct {
	// Name is the name of the fixed input file.
	//
	// It is used when the Input is a fixed input.
	Name string `yaml:"path,omitempty" json:"path,omitempty"`

	// Generator is the generator of the input.
	//
	// It is used when the Input is a generated input.
	Generator string `yaml:"generator,omitempty" json:"generator,omitempty"`

	// ExtraArgs is the extra arguments of the generator.
	//
	// It is used when the Input is a generated input.
	ExtraArgs []string `yaml:"extra_args,omitempty" json:"extra_args,omitempty"`
}
